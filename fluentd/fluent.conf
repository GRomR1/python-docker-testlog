# <system>
#   # equal to -qq option
#   log_level warn
#   # equal to --without-source option
#   # without_source
#   # ...
# </system>

# Receive events from 24224/tcp
# This is used by log forwarding and the fluent-cat command
<source>
  @type forward
  port 24224
  bind 0.0.0.0
  @label @CONCAT
</source>


# # http://this.host:9880/myapp.access?json={"event":"data"}
# <source>
#   @type http
#   port 9880
# </source>

#; <source>
#;   @type tail
#;   read_from_head true
#;   path /var/lib/docker/containers/*/*-json.log
#;   pos_file /var/log/fluentd-docker.pos
#;   time_format %Y-%m-%dT%H:%M:%S
#;   tag docker.*
#;   format json
#; </source>

#; # Using filter to add container IDs to each event
#; <filter docker.var.lib.docker.containers.*.*.log>
#;   type record_transformer
#;   <record>
#;     container_id ${tag_parts[5]}
#;   </record>
#; </filter>
#;
#; <parse>
#;   @type json
#; </parse>
#;
#; <match **>
#;   @type stdout
#; </match>


#<filter debug2.test>
#  @type record_transformer
#  <record>
#    host_param "#{Socket.gethostname}"
#  </record>
#</filter>

<label @CONCAT>
  <filter docker.app>
    @type concat
    key log
    stream_identity_key container_id
    partial_value true
    multiline_start_regexp /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z.+$/
    multiline_end_regexp /\n$/

    # keep_partial_metadata true
    # use_partial_metadata true
    # separator ""

    timeout_label @PARSER
  </filter>
  <match docker.app>
    @type relabel
    @label @PARSER
  </match>
</label>


<label @PARSER>
  <filter docker.app>
    @type parser
    key_name log
    reserve_data true
    <parse>
      @type multi_format
      <pattern>
        format regexp
        # time_key timestamp
        # time_type string
        utc true
        time_format %iso8601
    #    for oneline message
    #    expression /^(?<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z) - (?<name>\w+) - (?<log_level>\w+) - (?<message>.+)$/
    #    for multiline message w/o traceback
       expression /^(?<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z) - (?<name>[\w\.\_\-]+) - (?<log_level>\w+) - (?<message>[\s\S]*)/
    #    for multiline message with traceback
        # expression /^(?<time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z) - (?<name>\w+) - (?<log_level>\w+) - (?<message>.+)\n?(?<traceback>Traceback[\s\S]*)?/
      </pattern>
      <pattern>
        format none
      </pattern>
    </parse>
  </filter>
  <match docker.app>
    @type relabel
    @label @OUTPUT
  </match>
</label>

#
# <label @PARSER>
#   <filter docker.app>
#     @type parser
#     key_name log
#     reserve_data true
#     <parse>
#       @type regexp
#       # time_key timestamp
#       # time_type string
#       utc true
#       time_format %iso8601
#   #    for oneline message
#   #    expression /^(?<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z) - (?<name>\w+) - (?<log_level>\w+) - (?<message>.+)$/
#   #    for multiline message w/o traceback
#      expression /^(?<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z) - (?<name>\w+) - (?<log_level>\w+) - (?<message>[\s\S]*)/
#   #    for multiline message with traceback
#       # expression /^(?<time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z) - (?<name>\w+) - (?<log_level>\w+) - (?<message>.+)\n?(?<traceback>Traceback[\s\S]*)?/
#     </parse>
#   </filter>
#   <match docker.app>
#     @type relabel
#     @label @OUTPUT
#   </match>
# </label>


#
#<filter foo.bar>
#  @type parser
#  key_name log
#  <parse>
#    @type regexp
#    expression /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)$/
#    time_format %d/%b/%Y:%H:%M:%S %z
#  </parse>
#</filter>

#
#<filter docker.app>
#</filter>

#<filter docker.app>
#  @type record_transformer
#  <parse>
#    @type json
#  </parse>
#  <parse>
#    @type grok
#    <grok>
#      name mylog-without-timezone
#      pattern %{DATESTAMP:time} %{GREEDYDATE:message}
#      timezone Asia/Tokyo
#    </grok>
#  </parse>
#</filter>

# <match **>
#     @type stdout
# </match>

<label @OUTPUT>
  <filter **>
   @type record_transformer
   <record>
     source ${record["container_name"]}
   </record>
  </filter>
  <match **>
    @type copy
    <store>
       @type stdout
    </store>
    <store>
      @type gelf
      host gelf.example.com
      port 12201
      protocol udp
      <buffer>
        flush_interval 5s
      </buffer>
    </store>
    <store>
      # @type file
      # path /var/log/fluentd/app
      # time_slice_format %Y%m%d
      # append true
      # <format>
      #    @type single_value
      #    message_key log
      # </format>
      # <buffer>
      #   timekey 1d
      #   timekey_zone Europe/Moscow
      #   timekey_wait 10m
      # </buffer>

      # for tests:
      # @type file
      # path /var/log/fluentd/app
      # time_slice_format %Y%m%d_%H%M%S
      # append true
      # <buffer>
      #   timekey 1m
      #   timekey_zone Europe/Moscow
      #   timekey_wait 1m
      # </buffer>
      # <buffer>
      #   # timekey 1d
      #   # timekey_use_utc true
      #   # timekey_zone Europe/Moscow
      #   # timekey_wait 10m
      #   # timekey_wait 1m
      #   timekey 10s
      #   timekey_use_utc true
      #   timekey_wait 15s
      # </buffer>

      @type file
      path /var/log/fluentd/${tag}
      append true
      <format>
         @type single_value
         message_key log
      </format>
      <buffer tag>
        @type memory
        flush_interval 10s
      </buffer>
    </store>
  </match>
</label>


